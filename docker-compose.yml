version: "3"

services:
    app:
        build:
            context: ./private-backend
        ports:
            - "7000:7000"
        volumes:
            - ./private-backend/app:/app
        command: >
            sh -c "cd /app && 
                python manage.py wait_for_db && 
                python manage.py makemigrations && 
                python manage.py migrate && 
                python manage.py runserver 0.0.0.0:7000"
        restart: always
        environment: 
            - DB_HOST=db
            - DB_NAME=app
            - DB_USER=postgres
            - DB_PASS=supersecretpassword
        depends_on: 
            - db
    
    frontend:
        build:
            context: ./private-frontend
        ports:
            - "3000:3000"
        restart: always
        volumes:
            - ./private-frontend:/private-frontend/app_front
            - ./private-frontend/pages:/app_front/pages
            - ./private-frontend/public:/app_front/public
            - ./private-frontend/node_modules:/app_front/node_modules
            - ./private-frontend/.next:/app_front/.next
            - ./private-frontend/styles:/app_front/styles
        # prod command: (sh -c "npm run build && npm start") 
        command: >
            npm run dev 
        depends_on: 
            - app
    
    db:
        image: postgres:10-alpine
        restart: always
        #volumes:
        #    - pgdata:/var/lib/postgresql/data/
        environment: 
            - POSTGRES_DB=app
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=supersecretpassword
        
    web_server:
        build:
            context: .
            dockerfile: Dockerfile.nginx
        restart: always
        ports:
            - "20000:80"
            - "20001:443"
        depends_on: 
            - app
            - frontend
volumes:
    pg_data: